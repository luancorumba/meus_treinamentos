{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyPLcF29uyI+7Hq7/8fScZUK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["###### Inicialização"],"metadata":{"id":"lJeDRY2Zc6Tn"}},{"cell_type":"code","source":["# instalar as dependências\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","!wget -q https://dlcdn.apache.org/spark/spark-3.4.0/spark-3.4.0-bin-hadoop3.tgz\n","!tar xf spark-3.4.0-bin-hadoop3.tgz\n","!pip install -q findspark"],"metadata":{"id":"ty_kN91oadtM","executionInfo":{"status":"ok","timestamp":1685926259615,"user_tz":180,"elapsed":23252,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# configurar as variáveis de ambiente\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.4.0-bin-hadoop3\"\n","\n","# tornar o pyspark \"importável\"\n","import findspark\n","findspark.init('spark-3.4.0-bin-hadoop3')"],"metadata":{"id":"GMGdL4xyc423","executionInfo":{"status":"ok","timestamp":1685926260168,"user_tz":180,"elapsed":588,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# download do http para arquivo local\n","!wget --quiet --show-progress http://data.insideairbnb.com/brazil/rj/rio-de-janeiro/2023-03-28/visualisations/listings.csv"],"metadata":{"id":"qRro-0ZO38tf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926260169,"user_tz":180,"elapsed":20,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"35b0e56e-e28d-4bef-edae-348b4e55ae88"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["listings.csv.5      100%[===================>]   4.37M  27.5MB/s    in 0.2s    \n"]}]},{"cell_type":"code","source":["from pyspark.sql import SparkSession\n","spark = SparkSession.builder.master('local[*]').getOrCreate()\n","sc = spark.sparkContext"],"metadata":{"id":"ec7TXvsiWQ3m","executionInfo":{"status":"ok","timestamp":1685926273550,"user_tz":180,"elapsed":13034,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["# PySpark (Sessão 8)\n","\n"],"metadata":{"id":"frFI5O7cZ5L8"}},{"cell_type":"markdown","source":["![img](https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Apache_Spark_logo.svg/250px-Apache_Spark_logo.svg.png)\n","\n","\n","https://spark.apache.org/docs/latest/api/python/"],"metadata":{"id":"pJCODccgTiQD"}},{"cell_type":"markdown","source":["## Recapitulando o que vimos antes..."],"metadata":{"id":"bGI5IDjEL5Z7"}},{"cell_type":"markdown","source":["1. Introdução às UDFs\n","2. Tipos de UDFs\n","3. Estratégias de otimização de UDFs"],"metadata":{"id":"yOqQuZT-cM9w"}},{"cell_type":"markdown","source":["## Introdução ao SQL em PySpark"],"metadata":{"id":"w_GXUXTITQuX"}},{"cell_type":"markdown","source":["\n","### Qua a importância do SQL integrado no pyspark?"],"metadata":{"id":"Co4kOngCTSUd"}},{"cell_type":"markdown","source":["O SQL desempenha um papel importante no PySpark e no Apache Spark, pois oferece uma interface familiar e declarativa para manipular e analisar dados estruturados e semiestruturados. A integração do SQL com o PySpark é possível graças ao componente Spark SQL, que estende o Spark para suportar consultas SQL e o uso de DataFrames. A importância do SQL no PySpark pode ser destacada pelos seguintes pontos:\n","\n","1. **Facilidade de uso**: O SQL oferece uma maneira familiar e intuitiva de trabalhar com dados, facilitando a adoção e o aprendizado do PySpark por desenvolvedores e analistas de dados que já têm experiência com SQL e bancos de dados relacionais.\n","\n","2. **Manipulação declarativa de dados**: O SQL permite expressar transformações e consultas de dados de forma declarativa, o que pode simplificar o desenvolvimento de aplicações e melhorar a legibilidade e a manutenção do código.\n","\n","3. **Interoperabilidade com outras ferramentas e sistemas**: A integração do SQL no PySpark facilita a conexão com outras ferramentas e sistemas de análise de dados que usam SQL, como sistemas de business intelligence (BI), ferramentas de visualização e bancos de dados relacionais.\n","\n","4. **Otimizações de desempenho**: O Spark SQL inclui o mecanismo de otimização de consultas Catalyst, que analisa a estrutura das consultas SQL e aplica várias otimizações de desempenho. Isso resulta em um melhor desempenho em comparação com o uso de RDDs diretamente.\n","\n","5. **Uso de funções SQL embutidas**: O Spark SQL oferece várias funções embutidas, como funções de agregação, funções de janela e funções analíticas, que podem ser usadas diretamente nas consultas SQL para realizar operações avançadas e análises complexas.\n","\n","6. **Suporte para dados estruturados e semiestruturados**: O SQL no PySpark permite trabalhar com dados estruturados e semiestruturados, como arquivos CSV, JSON, Parquet e bancos de dados relacionais, fornecendo uma abstração flexível e conveniente para lidar com dados que possuem esquemas."],"metadata":{"id":"bvtzdjIr8L2F"}},{"cell_type":"markdown","source":["\n","### Integração do SQL com PySpark"],"metadata":{"id":"sUzkjeKGTToE"}},{"cell_type":"markdown","source":["A integração do SQL com PySpark no Apache Spark permite aos desenvolvedores executar consultas SQL em DataFrames, facilitando a manipulação de dados estruturados e semiestruturados. Essa integração é possível graças ao componente Spark SQL, que estende o Spark para suportar consultas SQL e o uso de DataFrames."],"metadata":{"id":"EhOGXa2D668X"}},{"cell_type":"markdown","source":["Você pode ler dados de várias fontes, como arquivos CSV, JSON, Parquet ou bancos de dados relacionais, e criar DataFrames. Por exemplo, para ler dados de um arquivo CSV:"],"metadata":{"id":"Kj0_1hxI7Ksz"}},{"cell_type":"code","source":["airbnb_rj = spark.read.csv(\"./listings.csv\", inferSchema=True, header=True)\n","airbnb_rj"],"metadata":{"id":"T_lB5K6e33yy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926289799,"user_tz":180,"elapsed":16500,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"2a07e5fd-a280-47bb-91f7-91ed5ea05dac"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[id: string, name: string, host_id: string, host_name: string, neighbourhood_group: string, neighbourhood: string, latitude: string, longitude: string, room_type: string, price: string, minimum_nights: string, number_of_reviews: string, last_review: string, reviews_per_month: string, calculated_host_listings_count: string, availability_365: string, number_of_reviews_ltm: double, license: int]"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["spark.sql(\"show tables\").show()"],"metadata":{"id":"ZVGrShYyTib8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926293637,"user_tz":180,"elapsed":838,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"9eede604-6fe9-49bd-c450-7c5da0608b1e"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+---------+-----------+\n","|namespace|tableName|isTemporary|\n","+---------+---------+-----------+\n","+---------+---------+-----------+\n","\n"]}]},{"cell_type":"markdown","source":["\n","### Criação de tabelas a partir de DataFrames"],"metadata":{"id":"YeQKSaOOTUxg"}},{"cell_type":"markdown","source":["**Registre o DataFrame como uma tabela temporária**: Antes de executar consultas SQL no DataFrame, você precisa registrá-lo como uma tabela temporária. Essa tabela temporária estará disponível apenas para a sessão atual do Spark e será descartada quando a sessão terminar."],"metadata":{"id":"vMxWETYw7Ra0"}},{"cell_type":"code","source":["airbnb_rj.createOrReplaceTempView(\"airbnb_rj\")"],"metadata":{"id":"VDmnATiz5Z8v","executionInfo":{"status":"ok","timestamp":1685926465089,"user_tz":180,"elapsed":307,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["\n","### Execução de consultas SQL em PySpark"],"metadata":{"id":"V5fPhtBVTVxW"}},{"cell_type":"markdown","source":["Agora você pode executar consultas SQL na tabela temporária usando o método sql() da sessão Spark. O resultado da consulta será retornado como um novo DataFrame."],"metadata":{"id":"5IgkywzQ7alB"}},{"cell_type":"code","source":["spark.sql(\"show tables\").show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926507936,"user_tz":180,"elapsed":154,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"eb9ec16f-8970-4099-cd88-f6173958d20a","id":"YlgUSOg6DLUx"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+---------+-----------+\n","|namespace|tableName|isTemporary|\n","+---------+---------+-----------+\n","|         |airbnb_rj|       true|\n","+---------+---------+-----------+\n","\n"]}]},{"cell_type":"code","source":["novo_airbnb_rj = spark.sql(\"select * from airbnb_rj\")\n","novo_airbnb_rj"],"metadata":{"id":"nhLGSThOTjDT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926533154,"user_tz":180,"elapsed":314,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"b9eb97ef-7cd4-49d6-96b8-4f502bc6b43e"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[id: string, name: string, host_id: string, host_name: string, neighbourhood_group: string, neighbourhood: string, latitude: string, longitude: string, room_type: string, price: string, minimum_nights: string, number_of_reviews: string, last_review: string, reviews_per_month: string, calculated_host_listings_count: string, availability_365: string, number_of_reviews_ltm: double, license: int]"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","source":["Você pode manipular o resultado da consulta SQL como um DataFrame regular usando a API do DataFrame ou converter o resultado em um RDD para realizar operações específicas do RDD."],"metadata":{"id":"IeA1fpVc7l1Q"}},{"cell_type":"code","source":["novo_airbnb_rj.show()"],"metadata":{"id":"EhxpepBpTjhP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926571275,"user_tz":180,"elapsed":1020,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"954ee647-10f9-488a-b19a-60adb00b9b53"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["+------+--------------------+-------+--------------------+-------------------+---------------+----------+----------+---------------+-----+--------------+-----------------+-----------+-----------------+------------------------------+----------------+---------------------+-------+\n","|    id|                name|host_id|           host_name|neighbourhood_group|  neighbourhood|  latitude| longitude|      room_type|price|minimum_nights|number_of_reviews|last_review|reviews_per_month|calculated_host_listings_count|availability_365|number_of_reviews_ltm|license|\n","+------+--------------------+-------+--------------------+-------------------+---------------+----------+----------+---------------+-----+--------------+-----------------+-----------+-----------------+------------------------------+----------------+---------------------+-------+\n","| 17878|Very Nice 2Br in ...|  68997|            Matthias|               null|     Copacabana| -22.96599|  -43.1794|Entire home/apt|  350|             5|              288| 2023-03-01|             1.86|                             1|             264|                 19.0|   null|\n","| 24480|Nice and cozy nea...|  99249|                Goya|               null|        Ipanema| -22.98405| -43.20189|Entire home/apt|  624|             3|               86| 2023-03-27|             0.56|                             3|             357|                  1.0|   null|\n","|200568|30m of Ipa Beach ...| 980805|            Henrique|               null|        Ipanema| -22.98586| -43.19411|Entire home/apt|  100|            30|              198| 2023-02-13|             1.45|                             6|              59|                  9.0|   null|\n","|342874|Comfortable in Co...| 829630|             Luciana|               null|           Leme| -22.96392| -43.17263|Entire home/apt|  236|             2|              159| 2023-02-26|             1.19|                             3|             105|                 31.0|   null|\n","| 25026|Beautiful Modern ...| 102840|             Viviane|               null|     Copacabana| -22.97735| -43.19105|Entire home/apt|  307|             3|              262| 2023-03-27|             1.68|                             1|             257|                 14.0|   null|\n","|202778|Best Studio in Ri...| 529105|                Alex|               null|     Copacabana| -22.96582| -43.17786|Entire home/apt|  266|             3|              223| 2023-03-08|             1.58|                             3|             356|                 10.0|   null|\n","| 35764|COPACABANA SEA BR...| 153691|Patricia Miranda ...|               null|     Copacabana| -22.98107| -43.19136|Entire home/apt|  180|             3|              428| 2023-03-21|             2.82|                             1|              53|                 40.0|   null|\n","| 48305|Bright 6bed Penth...|  70933|             Goitaca|               null|        Ipanema| -22.98591| -43.20302|Entire home/apt| 2270|             2|              136| 2023-03-19|             0.92|                             9|             254|                 34.0|   null|\n","|203674|IPANEMA PENTHOUSE...| 999125|            Alastair|               null|        Ipanema| -22.98335| -43.20306|Entire home/apt| 1899|             5|               48| 2019-05-07|             0.36|                             1|             268|                  0.0|   null|\n","|210173|BEAUTIFUL! Spacio...|1030316|           Elizabeth|               null|     Copacabana| -22.98596| -43.19001|   Private room| 1576|             2|                3| 2019-10-03|             0.02|                             3|             365|                  0.0|   null|\n","|215793|BEAUTIFUL! Spacio...|1030316|           Elizabeth|               null|     Copacabana| -22.98596| -43.19001|   Private room|  427|             2|               39| 2023-02-23|             0.28|                             3|             259|                  6.0|   null|\n","|344463|Ocean front 2 sui...|1762102|               Hilda|               null|Barra da Tijuca|  -23.0098| -43.37099|Entire home/apt|  539|             3|               65| 2022-09-05|             0.51|                             2|             217|                  1.0|   null|\n","| 48901|Confortable 4BD 3...| 222884|              Marcio|               null|     Copacabana| -22.96574| -43.17514|Entire home/apt|  627|             3|               13| 2023-03-12|             0.14|                             2|             354|                  5.0|   null|\n","|346694|Alugo quarto espa...|1612576|            Jassanan|               null|  Vila da Penha| -22.84208| -43.31572|   Private room|  340|             1|                0|       null|             null|                             1|             362|                  0.0|   null|\n","|215887|BEAUTIFUL! Spacio...|1030316|           Elizabeth|               null|     Copacabana| -22.98596| -43.19001|   Private room|  214|             2|               39| 2023-02-22|             0.28|                             3|             255|                  5.0|   null|\n","| 49179|Djalma Ocean View...| 224192|               David|               null|     Copacabana|  -22.9791| -43.19008|Entire home/apt|  200|             4|              133| 2023-03-20|             1.06|                            21|             132|                 14.0|   null|\n","| 51703|Ocean view, block...| 238091|               Dália|               null|     Copacabana|-22.981731|-43.190571|Entire home/apt|  178|             3|              233| 2023-03-25|             1.80|                             2|             326|                 30.0|   null|\n","|216461|Comfortable room ...|1154263|         Zeilma , Da|               null|       Flamengo|  -22.9399| -43.17676|   Private room|  780|             1|                0|       null|             null|                             1|             365|                  0.0|   null|\n","|347295|Copa Penthouse Br...|1603206|                 Bob|               null|     Copacabana| -22.96654| -43.18248|Entire home/apt|  197|             3|               75| 2023-03-19|             0.56|                             5|             333|                  2.0|   null|\n","| 53533|Walk to Joatinga ...| 249439|      Sherri & Andre|               null|            Joá| -23.00809| -43.29113|Entire home/apt| 1355|             2|               31| 2023-02-23|             0.22|                             1|             332|                 13.0|   null|\n","+------+--------------------+-------+--------------------+-------------------+---------------+----------+----------+---------------+-----+--------------+-----------------+-----------+-----------------+------------------------------+----------------+---------------------+-------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"markdown","source":["\n","## Consultas SQL em PySpark"],"metadata":{"id":"bIWtSdliTWhw"}},{"cell_type":"markdown","source":["\n","### Sintaxe básica de consultas SQL em PySpark"],"metadata":{"id":"tzngnak8TXtz"}},{"cell_type":"code","source":["dataframe = spark.sql(\"select * from airbnb_rj\")\n","dataframe"],"metadata":{"id":"es7wwAzoTj-K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1685926587837,"user_tz":180,"elapsed":315,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"e36606d8-0e3b-4298-840b-8cb00045e353"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DataFrame[id: string, name: string, host_id: string, host_name: string, neighbourhood_group: string, neighbourhood: string, latitude: string, longitude: string, room_type: string, price: string, minimum_nights: string, number_of_reviews: string, last_review: string, reviews_per_month: string, calculated_host_listings_count: string, availability_365: string, number_of_reviews_ltm: double, license: int]"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["\n","### Operações de Seleção, Projeção, Junção, Agregação, etc."],"metadata":{"id":"Vq7Ov_nFTZaW"}},{"cell_type":"code","source":["dataframe_1 = spark.sql(\"\"\"select id, cast(host_id as int) as host_id, neighbourhood, room_type, price \n","                      from airbnb_rj\"\"\")\n","dataframe_1.createOrReplaceTempView(\"airbnb_rj_2\")"],"metadata":{"id":"YzjlnKEGTkcG","executionInfo":{"status":"ok","timestamp":1685926650737,"user_tz":180,"elapsed":17,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["dataframe_2 = spark.sql(\"\"\"select neighbourhood, count(distinct host_id) as qtd_hosts\n","                      from airbnb_rj_2\n","                      where host_id is not null\n","                      group by neighbourhood\n","                      order by qtd_hosts desc\"\"\")\n","dataframe_2.limit(5).toPandas()"],"metadata":{"id":"Bt1-IY-k-7fX","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1685926717118,"user_tz":180,"elapsed":4466,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"681da83e-34b1-43c2-c723-14cff609812f"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              neighbourhood  qtd_hosts\n","0                Copacabana       5409\n","1           Barra da Tijuca       2149\n","2                   Ipanema       1655\n","3  Recreio dos Bandeirantes       1222\n","4               Jacarepaguá       1118"],"text/html":["\n","  <div id=\"df-c6f336af-d5d1-4d3c-8b70-50202dc6f2a5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood</th>\n","      <th>qtd_hosts</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Copacabana</td>\n","      <td>5409</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Barra da Tijuca</td>\n","      <td>2149</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ipanema</td>\n","      <td>1655</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Recreio dos Bandeirantes</td>\n","      <td>1222</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Jacarepaguá</td>\n","      <td>1118</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6f336af-d5d1-4d3c-8b70-50202dc6f2a5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c6f336af-d5d1-4d3c-8b70-50202dc6f2a5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c6f336af-d5d1-4d3c-8b70-50202dc6f2a5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["dataframe_3 = spark.sql(\"\"\"select neighbourhood,\n","                                min(price) as min_price,\n","                                avg(price) as avg_price,\n","                                max(price) as max_price\n","                      from airbnb_rj_2\n","                      where host_id is not null\n","                      group by neighbourhood\n","                      order by avg_price desc\"\"\")\n","dataframe_3.limit(5).toPandas()"],"metadata":{"id":"8_rjsV5l_SLC","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1685926771066,"user_tz":180,"elapsed":2577,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"2c9b2e3b-cc6a-4208-804c-fdc043ee4ebd"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   neighbourhood min_price    avg_price max_price\n","0        Estácio       100  9313.872727        96\n","1  São Cristóvão       100  7329.211765        99\n","2     Bonsucesso       100  6429.250000        85\n","3            Joá      1000  5953.858209      9500\n","4    São Conrado       100  2330.000000       990"],"text/html":["\n","  <div id=\"df-069c5e44-5e90-43d6-ac65-0e463dab6589\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood</th>\n","      <th>min_price</th>\n","      <th>avg_price</th>\n","      <th>max_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Estácio</td>\n","      <td>100</td>\n","      <td>9313.872727</td>\n","      <td>96</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>São Cristóvão</td>\n","      <td>100</td>\n","      <td>7329.211765</td>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bonsucesso</td>\n","      <td>100</td>\n","      <td>6429.250000</td>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Joá</td>\n","      <td>1000</td>\n","      <td>5953.858209</td>\n","      <td>9500</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>São Conrado</td>\n","      <td>100</td>\n","      <td>2330.000000</td>\n","      <td>990</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-069c5e44-5e90-43d6-ac65-0e463dab6589')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-069c5e44-5e90-43d6-ac65-0e463dab6589 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-069c5e44-5e90-43d6-ac65-0e463dab6589');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["dataframe_4 = spark.sql(\"\"\"select room_type, count(distinct host_id) as qtd_hosts\n","                      from airbnb_rj_2\n","                      where host_id is not null\n","                      group by room_type\n","                      order by qtd_hosts desc\"\"\")\n","\n","dataframe_4.limit(5).toPandas()"],"metadata":{"id":"iboi03yo_WaL","colab":{"base_uri":"https://localhost:8080/","height":175},"executionInfo":{"status":"ok","timestamp":1685926824735,"user_tz":180,"elapsed":1726,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"6db8027a-dcd6-420c-dcfd-19c71194c7a2"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         room_type  qtd_hosts\n","0  Entire home/apt      15476\n","1     Private room       4060\n","2      Shared room        277\n","3       Hotel room         30"],"text/html":["\n","  <div id=\"df-858a8fa3-1cef-4968-9230-8aca21af9060\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>room_type</th>\n","      <th>qtd_hosts</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Entire home/apt</td>\n","      <td>15476</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Private room</td>\n","      <td>4060</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Shared room</td>\n","      <td>277</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Hotel room</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-858a8fa3-1cef-4968-9230-8aca21af9060')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-858a8fa3-1cef-4968-9230-8aca21af9060 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-858a8fa3-1cef-4968-9230-8aca21af9060');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["dataframe_2.createOrReplaceTempView(\"hosts_por_bairro\")\n","dataframe_3.createOrReplaceTempView(\"preco_por_bairro\")\n","dataframe_5 = spark.sql(\"\"\"\n","                        select \n","                          a.neighbourhood, a.qtd_hosts,\n","                          b.min_price, b.avg_price, b.max_price\n","                        from hosts_por_bairro a\n","                        join preco_por_bairro b on\n","                          a.neighbourhood = b.neighbourhood\n","                      \"\"\")\n","dataframe_5.limit(5).toPandas()"],"metadata":{"id":"zAN3l31lDRhA","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1685926938529,"user_tz":180,"elapsed":2254,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"936107f9-ff37-4d54-bf86-06c9b577a736"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  neighbourhood  qtd_hosts min_price   avg_price max_price\n","0        Cocotá          2       170  247.500000       300\n","1         Gávea        157       100  987.131313       980\n","2  Tomás Coelho          2        50   62.500000        75\n","3       Ipanema       1655       100  971.439605       999\n","4      Realengo          7       115  986.750000       849"],"text/html":["\n","  <div id=\"df-6323e08f-9bfc-4ca3-b326-56526cc46067\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>neighbourhood</th>\n","      <th>qtd_hosts</th>\n","      <th>min_price</th>\n","      <th>avg_price</th>\n","      <th>max_price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Cocotá</td>\n","      <td>2</td>\n","      <td>170</td>\n","      <td>247.500000</td>\n","      <td>300</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Gávea</td>\n","      <td>157</td>\n","      <td>100</td>\n","      <td>987.131313</td>\n","      <td>980</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Tomás Coelho</td>\n","      <td>2</td>\n","      <td>50</td>\n","      <td>62.500000</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Ipanema</td>\n","      <td>1655</td>\n","      <td>100</td>\n","      <td>971.439605</td>\n","      <td>999</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Realengo</td>\n","      <td>7</td>\n","      <td>115</td>\n","      <td>986.750000</td>\n","      <td>849</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6323e08f-9bfc-4ca3-b326-56526cc46067')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6323e08f-9bfc-4ca3-b326-56526cc46067 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6323e08f-9bfc-4ca3-b326-56526cc46067');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":17}]},{"cell_type":"markdown","source":["## Conclusão da sessão"],"metadata":{"id":"u20jBuvdTcBG"}},{"cell_type":"markdown","source":["1. Integração do SQL com PySpark\n","2. Criação de tabelas a partir de DataFrames\n","3. Consultas SQL em PySpark"],"metadata":{"id":"qmkkKK_sTdan"}},{"cell_type":"markdown","source":["## Exercício"],"metadata":{"id":"NCnmlbdJaB0S"}},{"cell_type":"markdown","source":["1. Como você pode registrar um DataFrame como uma tabela temporária no Spark, permitindo que consultas SQL sejam executadas nele? Dê um exemplo de código PySpark que demonstre como fazer isso.\n","\n","2. Escreva uma consulta SQL no Spark que calcule a média de uma coluna chamada \"valor\" agrupada por outra coluna chamada \"categoria\". Em seguida, mostre como executar essa consulta usando o PySpark e exibir o resultado.\n","\n","3. Considere dois DataFrames no Spark, \"orders\" e \"products\", onde \"orders\" possui as colunas \"order_id\", \"product_id\" e \"quantity\", e \"products\" possui as colunas \"product_id\", \"product_name\" e \"price\". Escreva uma consulta SQL no Spark que retorne o nome do produto, a quantidade total vendida e a receita total para cada produto, ordenados por receita total em ordem decrescente. Mostre como executar essa consulta usando o PySpark.\n","\n","4. Descreva como é possível utilizar a API DataFrame no Spark para realizar consultas SQL em conjunto com operações DataFrame. Dê um exemplo de código PySpark que demonstre como combinar consultas SQL e operações DataFrame em uma única pipeline de processamento.\n","\n","5. Suponha que você queira realizar uma análise exploratória de um conjunto de dados no Spark e identificar colunas com alta cardinalidade. Escreva uma consulta SQL no Spark que conte o número de valores distintos em uma coluna chamada \"atributo\" e retorne o resultado. Em seguida, mostre como executar essa consulta usando o PySpark e exibir o resultado."],"metadata":{"id":"uRc2Gm8iJpon"}}]}