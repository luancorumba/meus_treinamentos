{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["lJeDRY2Zc6Tn"],"toc_visible":true,"authorship_tag":"ABX9TyPZHRSbZjVgMjOOTFYi/X5m"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["###### Inicialização"],"metadata":{"id":"lJeDRY2Zc6Tn"}},{"cell_type":"code","source":["# instalar as dependências\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","!wget -q https://dlcdn.apache.org/spark/spark-3.4.0/spark-3.4.0-bin-hadoop3.tgz\n","!tar xf spark-3.4.0-bin-hadoop3.tgz\n","!pip install -q findspark"],"metadata":{"id":"ty_kN91oadtM","executionInfo":{"status":"ok","timestamp":1688342314785,"user_tz":180,"elapsed":32208,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# configurar as variáveis de ambiente\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.4.0-bin-hadoop3\"\n","\n","# tornar o pyspark \"importável\"\n","import findspark\n","findspark.init('spark-3.4.0-bin-hadoop3')"],"metadata":{"id":"GMGdL4xyc423","executionInfo":{"status":"ok","timestamp":1688342314796,"user_tz":180,"elapsed":195,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["# download do http para arquivo local\n","!wget --quiet --show-progress http://data.insideairbnb.com/brazil/rj/rio-de-janeiro/2023-03-28/visualisations/listings.csv"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qRro-0ZO38tf","executionInfo":{"status":"ok","timestamp":1688342316452,"user_tz":180,"elapsed":1809,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"292ee0b9-f4a2-4ca3-97f4-a2df73205064"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["listings.csv.1      100%[===================>]   4.37M  27.3MB/s    in 0.2s    \n"]}]},{"cell_type":"code","source":["!wget --quiet --show-progress https://www.arcgis.com/sharing/rest/content/items/3f382d42cf1d4f20bc489f5612481ede/data\n","!mv data natalidade_mortalidade_infantil.xls"],"metadata":{"id":"gmiHGi6fhe-l","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688342317591,"user_tz":180,"elapsed":1144,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"011239e9-1196-44eb-f42f-508e974d7844"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["\rdata                  0%[                    ]       0  --.-KB/s               \rdata                100%[===================>] 633.00K  --.-KB/s    in 0.1s    \n"]}]},{"cell_type":"code","source":["import pandas as pd\n","from matplotlib import pyplot as plt\n","from pyspark.sql import SparkSession\n","from pyspark.sql import functions as f\n","from pyspark.ml.functions import vector_to_array\n","from pyspark.ml import Pipeline\n","from pyspark.ml.feature import StringIndexer, OneHotEncoder, StandardScaler, MinMaxScaler, VectorAssembler\n","\n","spark = SparkSession.builder.master('local[*]').getOrCreate()\n","sc = spark.sparkContext"],"metadata":{"id":"BXGDDapXfjkh","executionInfo":{"status":"ok","timestamp":1688342317593,"user_tz":180,"elapsed":25,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":37,"outputs":[]},{"cell_type":"markdown","source":["# PySpark (Sessão 18)"],"metadata":{"id":"frFI5O7cZ5L8"}},{"cell_type":"markdown","source":["![img](https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Apache_Spark_logo.svg/250px-Apache_Spark_logo.svg.png)\n","\n","\n","https://spark.apache.org/docs/latest/api/python/"],"metadata":{"id":"pJCODccgTiQD"}},{"cell_type":"markdown","source":["## Recapitulando o que vimos antes..."],"metadata":{"id":"bGI5IDjEL5Z7"}},{"cell_type":"markdown","source":["1. Introdução aos algoritmos de regressão do MLlib\n","2. Algoritmo de Regressão Linear\n","3. Algoritmo de Regressão Generalizada"],"metadata":{"id":"0bAV-XNGuEaW"}},{"cell_type":"markdown","source":["## Preparando os dados"],"metadata":{"id":"ShKzmzPvFgZ6"}},{"cell_type":"code","source":["airbnb_rj = spark.read.csv(\"./listings.csv\", inferSchema=True, header=True)\n","airbnb_rj = airbnb_rj.where(airbnb_rj.host_id.cast(\"int\").isNotNull())\n","airbnb_rj = airbnb_rj.withColumn(\"host_id\", airbnb_rj.host_id.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"price_log\", f.log(airbnb_rj.price.cast('int') + 1))\n","airbnb_rj = airbnb_rj.withColumn(\"minimum_nights\", airbnb_rj.minimum_nights.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"number_of_reviews\", airbnb_rj.number_of_reviews.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"reviews_per_month\", airbnb_rj.reviews_per_month.cast('double'))\n","airbnb_rj = airbnb_rj.withColumn(\"availability_365\", airbnb_rj.availability_365.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"number_of_reviews_ltm\", airbnb_rj.number_of_reviews_ltm.cast('double'))\n","airbnb_rj = airbnb_rj.withColumn(\"calculated_host_listings_count\", airbnb_rj.calculated_host_listings_count.cast('int'))"],"metadata":{"id":"GZ36GBIvFivN","executionInfo":{"status":"ok","timestamp":1688342438880,"user_tz":180,"elapsed":2153,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["bairros_isolados = airbnb_rj.groupBy(airbnb_rj.neighbourhood). \\\n","                                agg(f.count(\"id\").alias(\"contagem\")). \\\n","                                where(\"contagem < 10\").select(airbnb_rj.neighbourhood). \\\n","                                toPandas().neighbourhood.tolist()\n","airbnb_rj = airbnb_rj.where(~airbnb_rj.neighbourhood.isin(bairros_isolados)) #existe apenas um ítem na base"],"metadata":{"id":"jNzN290MFlF8","executionInfo":{"status":"ok","timestamp":1688342441255,"user_tz":180,"elapsed":2410,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["natal_mort = pd.read_excel(open('natalidade_mortalidade_infantil.xls', 'rb'), sheet_name='2019',header=4)\n","natal_mort = natal_mort.drop([0,1,2]).drop(list(range(167,174))).iloc[:,[1,2,4,6,8,10]]\n","natal_mort.columns = [\"bairro\",\"obito_precoce\",\"obito_tardio\",\"obito_neonatal\",\"obito_1ano\",\"nascidos\"]\n","natal_mort.bairro = natal_mort.bairro.str.strip()\n","complementar = spark.createDataFrame(natal_mort)"],"metadata":{"id":"bE3ERlTNFlZt","executionInfo":{"status":"ok","timestamp":1688342441257,"user_tz":180,"elapsed":145,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":57,"outputs":[]},{"cell_type":"code","source":["airbnb_rj = airbnb_rj.join(complementar, on=[airbnb_rj.neighbourhood == complementar.bairro])"],"metadata":{"id":"nD5uu_PnFl9K","executionInfo":{"status":"ok","timestamp":1688342441898,"user_tz":180,"elapsed":50,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["airbnb_rj = airbnb_rj.withColumn(\"obito_precoce\", airbnb_rj.obito_precoce.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"obito_tardio\", airbnb_rj.obito_tardio.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"obito_neonatal\", airbnb_rj.obito_neonatal.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"obito_1ano\", airbnb_rj.obito_1ano.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"nascidos\", airbnb_rj.nascidos.cast('int'))"],"metadata":{"id":"qK5IhZD9NQM7","executionInfo":{"status":"ok","timestamp":1688342443446,"user_tz":180,"elapsed":14,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["categoricas = [\"neighbourhood\", \"room_type\"]\n","continuas = [\"minimum_nights\", \"number_of_reviews\", \"reviews_per_month\",\n","     \"calculated_host_listings_count\", \"availability_365\", \"number_of_reviews_ltm\", \"obito_precoce\",\n","     \"obito_tardio\", \"obito_neonatal\", \"obito_1ano\", \"nascidos\"]\n","resposta = [\"price_log\"]"],"metadata":{"id":"S72fwj3rFqzF","executionInfo":{"status":"ok","timestamp":1688342444588,"user_tz":180,"elapsed":59,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["airbnb_rj = airbnb_rj.fillna(0, subset = continuas)"],"metadata":{"id":"5iGhUCoaFrB9","executionInfo":{"status":"ok","timestamp":1688342450391,"user_tz":180,"elapsed":16,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["treino, teste = airbnb_rj.select(*(categoricas + continuas + resposta)).randomSplit([0.7, 0.3])"],"metadata":{"id":"QOCEpJz5Fzby","executionInfo":{"status":"ok","timestamp":1688342450396,"user_tz":180,"elapsed":19,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["stages = []"],"metadata":{"id":"XLURzI4VF6fG","executionInfo":{"status":"ok","timestamp":1688342453893,"user_tz":180,"elapsed":38,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":63,"outputs":[]},{"cell_type":"markdown","source":["Transformaremos as colunas categóricas em numéricas"],"metadata":{"id":"gLSYPuaBZo9o"}},{"cell_type":"code","source":["for col in categoricas:\n","  # Indexação de categoria\n","  string_indexer = StringIndexer(inputCol=col, outputCol=col + \"_idx\")\n","  # One-hot encoding\n","  encoder = OneHotEncoder(inputCols=[string_indexer.getOutputCol()], outputCols=[col + \"_ohe\"])\n","  stages += [string_indexer, encoder]"],"metadata":{"id":"0Kp1EWzVYGIg","executionInfo":{"status":"ok","timestamp":1688342455646,"user_tz":180,"elapsed":7,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":64,"outputs":[]},{"cell_type":"markdown","source":["Combinaremos todas as colunas de recurso em um vetor"],"metadata":{"id":"5TYA-N4gb3UM"}},{"cell_type":"code","source":["assembler_inputs = [c + \"_ohe\" for c in categoricas] + continuas\n","assembler = VectorAssembler(inputCols=assembler_inputs, outputCol='features')\n","stages += [assembler]"],"metadata":{"id":"jdsibzyaVDrU","executionInfo":{"status":"ok","timestamp":1688342455994,"user_tz":180,"elapsed":14,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":65,"outputs":[]},{"cell_type":"markdown","source":["Escalaremos as variáveis utilizando o StandardScaler"],"metadata":{"id":"CHw5VHetF_PU"}},{"cell_type":"code","source":["scaler = StandardScaler(inputCol='features', outputCol='features_scaled')\n","stages += [scaler]"],"metadata":{"id":"4qYE4Md55GjX","executionInfo":{"status":"ok","timestamp":1688342462379,"user_tz":180,"elapsed":426,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":66,"outputs":[]},{"cell_type":"markdown","source":["Transformaremos os dados para estarem prontos para aplicarmos os modelos"],"metadata":{"id":"t738mMASGSaN"}},{"cell_type":"code","source":["pipeline = Pipeline(stages=stages)\n","preparacao = pipeline.fit(treino)"],"metadata":{"id":"WhAdhX1lY_WE","executionInfo":{"status":"ok","timestamp":1688342469190,"user_tz":180,"elapsed":5074,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":67,"outputs":[]},{"cell_type":"code","source":["treino = preparacao.transform(treino).select('features_scaled','price_log')\n","teste = preparacao.transform(teste).select('features_scaled','price_log')"],"metadata":{"id":"Ryhb67VmcNWw","executionInfo":{"status":"ok","timestamp":1688342469700,"user_tz":180,"elapsed":558,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":68,"outputs":[]},{"cell_type":"markdown","source":["## Algoritmo de Árvores de Regressão\n"],"metadata":{"id":"w_GXUXTITQuX"}},{"cell_type":"markdown","source":["As árvores de decisão são uma técnica popular para lidar com problemas de regressão e classificação. Em vez de assumir uma relação específica entre as variáveis de entrada e a variável de saída, as árvores de decisão tentam dividir as variáveis de entrada em segmentos que minimizam a variância da variável de saída dentro de cada segmento."],"metadata":{"id":"6A2Ak-xLuFkR"}},{"cell_type":"code","source":["from pyspark.ml.regression import DecisionTreeRegressor\n","\n","dt = DecisionTreeRegressor(featuresCol ='features_scaled', labelCol = 'price_log')\n","\n","dt_model = dt.fit(treino)\n","predictions = dt_model.transform(teste)"],"metadata":{"id":"ZVGrShYyTib8","executionInfo":{"status":"ok","timestamp":1688342482083,"user_tz":180,"elapsed":3929,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":69,"outputs":[]},{"cell_type":"code","source":["from pyspark.ml.evaluation import RegressionEvaluator\n","\n","evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"rmse\")\n","\n","rmse = evaluator.evaluate(predictions)\n","print(\"Root Mean Squared Error (RMSE) on test data = %g\" % rmse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ex7KoU-1hHdC","executionInfo":{"status":"ok","timestamp":1688342501548,"user_tz":180,"elapsed":2661,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"24ded5b5-f4fe-4e33-af51-3d61f211bdc3"},"execution_count":70,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE) on test data = 0.823434\n"]}]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"mae\")\n","\n","mae = evaluator.evaluate(predictions)\n","print(\"Mean Absolute Error (MAE) on test data = %g\" % mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"m-Hd3BfShHdD","executionInfo":{"status":"ok","timestamp":1688342515669,"user_tz":180,"elapsed":1818,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"cf7f2a6a-6b87-4fae-c399-1e702c8377df"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error (MAE) on test data = 0.597514\n"]}]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"var\")\n","\n","var = evaluator.evaluate(predictions)\n","print(\"Explained Variance (var) on test data = %g\" % var)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8M_PX7PbhHdD","executionInfo":{"status":"ok","timestamp":1688342523796,"user_tz":180,"elapsed":1390,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"cd756bbe-a5f9-435c-d0a0-7887cf55403e"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Explained Variance (var) on test data = 0.294565\n"]}]},{"cell_type":"markdown","source":["## Regressão com Florestas Aleatórias"],"metadata":{"id":"T05zTnxQuGEb"}},{"cell_type":"markdown","source":["As florestas aleatórias melhoram as árvores de decisão combinando as previsões de muitas árvores de decisão diferentes. Cada árvore é treinada em uma amostra bootstrap dos dados de treinamento e apenas um subconjunto aleatório das variáveis de entrada é considerado em cada divisão da árvore. Isso ajuda a reduzir a variância das previsões e a evitar o sobreajuste."],"metadata":{"id":"2Mds3XhHuGeF"}},{"cell_type":"code","source":["from pyspark.ml.regression import RandomForestRegressor\n","\n","rf = RandomForestRegressor(featuresCol ='features_scaled', labelCol = 'price_log')\n","\n","rf_model = rf.fit(treino)\n","predictions = rf_model.transform(teste)"],"metadata":{"id":"BJvpEo3muGzt","executionInfo":{"status":"ok","timestamp":1688342653521,"user_tz":180,"elapsed":5789,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"rmse\")\n","\n","rmse = evaluator.evaluate(predictions)\n","print(\"Root Mean Squared Error (RMSE) on test data = %g\" % rmse)"],"metadata":{"id":"YnA1zUmdPdYs","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1688342659747,"user_tz":180,"elapsed":1344,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"2b689a1f-2b2c-41bd-f6dd-e2666f333654"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE) on test data = 0.816698\n"]}]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"mae\")\n","\n","mae = evaluator.evaluate(predictions)\n","print(\"Mean Absolute Error (MAE) on test data = %g\" % mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RyA2fR_WgttF","executionInfo":{"status":"ok","timestamp":1688342665102,"user_tz":180,"elapsed":1422,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"b76af680-1780-4387-cafd-52b3012d97ed"},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error (MAE) on test data = 0.597913\n"]}]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"var\")\n","\n","var = evaluator.evaluate(predictions)\n","print(\"Explained Variance (var) on test data = %g\" % var)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wlOGc39jgvH1","executionInfo":{"status":"ok","timestamp":1688342670905,"user_tz":180,"elapsed":1420,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"733206e1-2f51-47b3-de31-5def7468f31f"},"execution_count":76,"outputs":[{"output_type":"stream","name":"stdout","text":["Explained Variance (var) on test data = 0.220038\n"]}]},{"cell_type":"code","source":["predictions.select(\"price_log\",\"prediction\").sample(.1).toPandas()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"GEu4V29sEMwW","executionInfo":{"status":"ok","timestamp":1688342827392,"user_tz":180,"elapsed":2063,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"a5c1de77-a52b-49f3-bb95-1cc838891fa3"},"execution_count":80,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     price_log  prediction\n","0     8.821437    6.944860\n","1     5.472271    5.270484\n","2     4.644391    6.625804\n","3     5.579730    5.967923\n","4     8.006701    5.748231\n","..         ...         ...\n","893   5.303305    5.368088\n","894   3.931826    6.752743\n","895   5.356586    5.753938\n","896   5.991465    5.225266\n","897   4.262680    5.531892\n","\n","[898 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-e1df9e30-7c84-405d-aefd-97eb80e9027e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price_log</th>\n","      <th>prediction</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>8.821437</td>\n","      <td>6.944860</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.472271</td>\n","      <td>5.270484</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.644391</td>\n","      <td>6.625804</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.579730</td>\n","      <td>5.967923</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>8.006701</td>\n","      <td>5.748231</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>893</th>\n","      <td>5.303305</td>\n","      <td>5.368088</td>\n","    </tr>\n","    <tr>\n","      <th>894</th>\n","      <td>3.931826</td>\n","      <td>6.752743</td>\n","    </tr>\n","    <tr>\n","      <th>895</th>\n","      <td>5.356586</td>\n","      <td>5.753938</td>\n","    </tr>\n","    <tr>\n","      <th>896</th>\n","      <td>5.991465</td>\n","      <td>5.225266</td>\n","    </tr>\n","    <tr>\n","      <th>897</th>\n","      <td>4.262680</td>\n","      <td>5.531892</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>898 rows × 2 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1df9e30-7c84-405d-aefd-97eb80e9027e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e1df9e30-7c84-405d-aefd-97eb80e9027e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e1df9e30-7c84-405d-aefd-97eb80e9027e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":80}]},{"cell_type":"markdown","source":["## Regressão com Gradient-Boosted Trees"],"metadata":{"id":"eF5biR9JuHFq"}},{"cell_type":"markdown","source":["Gradient Boosting é outra técnica de ensemble que combina as previsões de muitas árvores de decisão. No entanto, em vez de treinar todas as árvores independentemente, como em uma floresta aleatória, Gradient Boosting treina as árvores em sequência, com cada árvore tentando corrigir os erros da árvore anterior. Isso pode resultar em previsões mais precisas, mas também pode ser mais propenso a sobreajuste se o número de árvores não for cuidadosamente controlado."],"metadata":{"id":"ZfSjj85EuHtx"}},{"cell_type":"code","source":["from pyspark.ml.regression import GBTRegressor\n","\n","gbt = GBTRegressor(featuresCol ='features_scaled', labelCol = 'price_log', maxIter=10)\n","\n","gbt_model = gbt.fit(treino)\n","predictions = gbt_model.transform(teste)"],"metadata":{"id":"DVUsIQPUuID6","executionInfo":{"status":"ok","timestamp":1688342933288,"user_tz":180,"elapsed":11150,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}}},"execution_count":81,"outputs":[]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"rmse\")\n","\n","rmse = evaluator.evaluate(predictions)\n","print(\"Root Mean Squared Error (RMSE) on test data = %g\" % rmse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e21wZmcGhfZi","executionInfo":{"status":"ok","timestamp":1688342935115,"user_tz":180,"elapsed":1879,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"6fcb9788-2be7-4403-a8e5-2b2f05f7dc41"},"execution_count":82,"outputs":[{"output_type":"stream","name":"stdout","text":["Root Mean Squared Error (RMSE) on test data = 0.786742\n"]}]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"mae\")\n","\n","mae = evaluator.evaluate(predictions)\n","print(\"Mean Absolute Error (MAE) on test data = %g\" % mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tf6pZ_92hfZj","executionInfo":{"status":"ok","timestamp":1688342936588,"user_tz":180,"elapsed":1483,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"b787d36d-3fdb-43fe-e767-a36e5e85d814"},"execution_count":83,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error (MAE) on test data = 0.567367\n"]}]},{"cell_type":"code","source":["evaluator = RegressionEvaluator(predictionCol=\"prediction\", labelCol=\"price_log\", metricName=\"var\")\n","\n","var = evaluator.evaluate(predictions)\n","print(\"Explained Variance (var) on test data = %g\" % var)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VuO47gedhfZj","executionInfo":{"status":"ok","timestamp":1688342938184,"user_tz":180,"elapsed":1609,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"e7017c8a-921e-44a9-9dcc-7021221ab936"},"execution_count":84,"outputs":[{"output_type":"stream","name":"stdout","text":["Explained Variance (var) on test data = 0.349513\n"]}]},{"cell_type":"markdown","source":["## Conclusão da sessão"],"metadata":{"id":"u20jBuvdTcBG"}},{"cell_type":"markdown","source":["1. Regressão com Árvores de Decisão\n","2. Regressão com Florestas Aleatórias\n","3. Regressão com Gradient-Boosted Trees\n","\n"],"metadata":{"id":"qmkkKK_sTdan"}},{"cell_type":"markdown","source":["## Exercício"],"metadata":{"id":"NCnmlbdJaB0S"}},{"cell_type":"markdown","source":["1. Suponha que você tem um conjunto de dados com várias características não lineares. Qual algoritmo de regressão você escolheria neste caso e por quê?\n","\n","2. Escreva um código PySpark para executar a Regressão com Árvores de Decisão em um conjunto de dados hipotético.\n","\n","3. Compare a Regressão com Árvores de Decisão e a Regressão com Florestas Aleatórias. Quando você usaria um em detrimento do outro?\n","\n","4. Implemente um modelo de Regressão com Florestas Aleatórias usando PySpark. Descreva os passos que você tomou para avaliar a precisão do modelo.\n","\n","5. Descreva a diferença entre Regressão com Florestas Aleatórias e Regressão com Gradient-Boosted Trees. Quando você usaria um em detrimento do outro? Implemente um modelo de Regressão com Gradient-Boosted Trees em PySpark."],"metadata":{"id":"esKYWYxzh5uB"}}]}