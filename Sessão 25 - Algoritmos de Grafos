{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNFeXKMo/MQi/Gng/Ec9YQY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["###### Inicialização"],"metadata":{"id":"lJeDRY2Zc6Tn"}},{"cell_type":"code","source":["# instalar as dependências\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","!wget -q https://dlcdn.apache.org/spark/spark-3.4.0/spark-3.4.0-bin-hadoop3.tgz\n","!tar xf spark-3.4.0-bin-hadoop3.tgz\n","\n","!wget -q https://repos.spark-packages.org/graphframes/graphframes/0.8.2-spark3.0-s_2.12/graphframes-0.8.2-spark3.0-s_2.12.jar\n","\n","!pip install -q findspark datasets graphframes networkx"],"metadata":{"id":"ty_kN91oadtM","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689037340249,"user_tz":180,"elapsed":47192,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"9324df0d-ea92-4085-e233-5560fa5eb6af"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m486.2/486.2 kB\u001b[0m \u001b[31m8.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m110.5/110.5 kB\u001b[0m \u001b[31m12.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m212.5/212.5 kB\u001b[0m \u001b[31m21.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.3/134.3 kB\u001b[0m \u001b[31m14.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m268.8/268.8 kB\u001b[0m \u001b[31m21.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m154.7/154.7 kB\u001b[0m \u001b[31m12.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}]},{"cell_type":"code","source":["# configurar as variáveis de ambiente\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.4.0-bin-hadoop3\"\n","\n","# tornar o pyspark \"importável\"\n","import findspark\n","findspark.init('spark-3.4.0-bin-hadoop3')"],"metadata":{"id":"GMGdL4xyc423"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!wget -q https://ls11-www.cs.tu-dortmund.de/people/morris/graphkerneldatasets/REDDIT-MULTI-5K.zip\n","!unzip -qq REDDIT-MULTI-5K.zip"],"metadata":{"id":"nmLN9ES1rI3l"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import io\n","import sys\n","import numpy as np\n","import pandas as pd\n","from pyspark import SparkConf, SparkContext\n","from pyspark.sql import SparkSession\n","from pyspark.sql import functions as f\n","from pyspark.sql import types as t\n","\n","SUBMIT_ARGS = \"--packages graphframes:graphframes:0.8.2-spark3.0-s_2.12 pyspark-shell\"\n","os.environ[\"PYSPARK_SUBMIT_ARGS\"] = SUBMIT_ARGS\n","\n","from graphframes import *"],"metadata":{"id":"V75Tou4YmdfI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["spark = SparkSession.builder.master('local[*]') \\\n","                          .config(\"spark.jars.packages\",\n","                                  \"graphframes:graphframes:0.8.2-spark3.0-s_2.12\") \\\n","                          .getOrCreate()\n","\n","sc = spark.sparkContext"],"metadata":{"id":"KNx4bCjPQXXC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!mkdir checkpoints\n","spark.sparkContext.setCheckpointDir('./checkpoints')"],"metadata":{"id":"Ko4IMgPFix-x"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# PySpark (Sessão 25)"],"metadata":{"id":"frFI5O7cZ5L8"}},{"cell_type":"markdown","source":["![img](https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Apache_Spark_logo.svg/250px-Apache_Spark_logo.svg.png)\n","\n","\n","<img src=\"https://spark.apache.org/docs/latest/img/graphx_logo.png\" width=\"280px\" style=\"align:right;\"/>\n","\n","\n","\n","https://spark.apache.org/docs/latest/api/python/"],"metadata":{"id":"pJCODccgTiQD"}},{"cell_type":"markdown","source":["## Recapitulando o que vimos antes..."],"metadata":{"id":"bGI5IDjEL5Z7"}},{"cell_type":"markdown","source":["1. Introdução ao GraphFrames\n","2. Instalação e Configuração\n","3. Estrutura de Dados em GraphFrames\n","4. Criação de um Grafo\n","5. Operações Básicas com Grafos"],"metadata":{"id":"lMda3_XD8IYO"}},{"cell_type":"markdown","source":["## Preparando os Dados"],"metadata":{"id":"Ap2-_B2d2b62"}},{"cell_type":"code","source":["schema = t.StructType([\n","    t.StructField(\"src\", t.IntegerType(), True),\n","    t.StructField(\"dst\", t.StringType(), True)\n","])"],"metadata":{"id":"reABqWp9sg6y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["arestas = spark.read.csv(\"/content/REDDIT-MULTI-5K/REDDIT-MULTI-5K_A.txt\", header=False, schema= schema).sample(.01)"],"metadata":{"id":"sfp9VVXBrAr3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["vertices = arestas.select(arestas.src.alias(\"id\")).union(arestas.select(arestas.dst).alias(\"id\")).distinct()"],"metadata":{"id":"hhfaNk86QAhe"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Criação do Grafo\n","g = GraphFrame(vertices, arestas)"],"metadata":{"id":"NVjYASXXx4uk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689037367805,"user_tz":180,"elapsed":9,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"e3f62ea1-1196-4de0-9524-9fbc3eb0e06e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/content/spark-3.4.0-bin-hadoop3/python/pyspark/sql/dataframe.py:169: UserWarning: DataFrame.sql_ctx is an internal property, and will be removed in future releases. Use DataFrame.sparkSession instead.\n","  warnings.warn(\n"]}]},{"cell_type":"markdown","source":["## Subgrafos"],"metadata":{"id":"w_GXUXTITQuX"}},{"cell_type":"markdown","source":["<center>\n","<img src=\"https://mathworld.wolfram.com/images/eps-svg/InducedSubgraph_900.svg\"/>\n","</center>"],"metadata":{"id":"JIjOehTwaXu7"}},{"cell_type":"markdown","source":["Um subgrafo é um subconjunto do gráfico original que consiste em alguns vértices e arestas do gráfico original. Este é um exemplo de como criar um subgrafo com GraphFrames."],"metadata":{"id":"K8o4jTHkytdG"}},{"cell_type":"code","source":["# Criando um subgrafo\n","v2 = g.vertices.filter(\"id > 500\")\n","e2 = g.edges.filter(\"dst < 1000\")\n","g2 = GraphFrame(v2, e2)"],"metadata":{"id":"ZVGrShYyTib8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Verificar os vértices e arestas\n","g2.vertices.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PwzMVUW13Vaa","executionInfo":{"status":"ok","timestamp":1689037403927,"user_tz":180,"elapsed":35564,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"c54faf83-29e7-400a-f8b9-df911c2a53ee"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+-----+\n","|   id|\n","+-----+\n","| 3606|\n","|14204|\n","|19095|\n","|20569|\n","|23918|\n","|24504|\n","|25894|\n","|28117|\n","|29539|\n","|43085|\n","|44032|\n","|47140|\n","|50961|\n","|55658|\n","|59370|\n","|60493|\n","|62912|\n","|76686|\n","|77303|\n","|79849|\n","+-----+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["g2.edges.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UdeEImWR3XCS","executionInfo":{"status":"ok","timestamp":1689037404567,"user_tz":180,"elapsed":642,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"20a9b506-f436-429c-b2a4-373858900dd8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+----+----+\n","| src| dst|\n","+----+----+\n","|  19| 248|\n","|  28| 824|\n","|1301|  81|\n","| 102| 376|\n","| 209| 716|\n","|  78| 248|\n","| 128| 248|\n","| 130| 248|\n","| 214| 248|\n","| 248| 215|\n","| 234| 248|\n","| 248| 350|\n","| 371| 248|\n","| 248| 507|\n","| 248| 523|\n","| 899| 248|\n","|1135| 248|\n","|1590| 248|\n","| 398| 291|\n","| 292|  70|\n","+----+----+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"markdown","source":["## Motifs: Encontrar padrões complexos em grafos"],"metadata":{"id":"Ajr721aSywwO"}},{"cell_type":"markdown","source":["<center>\n","<img src=\"https://upload.wikimedia.org/wikipedia/en/2/27/Different_occurrences_of_a_sub-graph_in_a_graph.jpg\" />\n","</center>"],"metadata":{"id":"G5tJXbp19Qv1"}},{"cell_type":"markdown","source":["Motifs são padrões estruturais de interesse em um gráfico. Eles são úteis para identificar subestruturas complexas em um gráfico. Vamos procurar um motivo onde duas pessoas seguem a mesma pessoa."],"metadata":{"id":"pcirquOTywmT"}},{"cell_type":"markdown","source":["### Encontrando relacionamentos com o mesmo vértice"],"metadata":{"id":"yBq1SPuefFxJ"}},{"cell_type":"code","source":["# Encontrando motifs\n","motifs = g.find(\"(a)-[ab]->(b); (c)-[cb]->(b)\")\n","motifs.show()"],"metadata":{"id":"KaBIH9skyxoA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689042719142,"user_tz":180,"elapsed":56300,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"c3d97fa9-0e0d-483c-c59a-28c0f3f8fdf8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/content/spark-3.4.0-bin-hadoop3/python/pyspark/sql/dataframe.py:148: UserWarning: DataFrame constructor is internal. Do not directly use it.\n","  warnings.warn(\"DataFrame constructor is internal. Do not directly use it.\")\n"]},{"output_type":"stream","name":"stdout","text":["+-------+---------------+--------+--------+---------------+\n","|      a|             ab|       b|       c|             cb|\n","+-------+---------------+--------+--------+---------------+\n","| {3606}|  {3606,  3647}| { 3647}|  {3606}|  {3606,  3647}|\n","|{14204}|{14204,  14716}|{ 14716}| {14204}|{14204,  14716}|\n","|{19095}|{19095,  19244}|{ 19244}| {19624}|{19624,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {19589}|{19589,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {19524}|{19524,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {19205}|{19205,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {18949}|{18949,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {18670}|{18670,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {18560}|{18560,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {19214}|{19214,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {19095}|{19095,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {19074}|{19074,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {18952}|{18952,  19244}|\n","|{19095}|{19095,  19244}|{ 19244}| {18645}|{18645,  19244}|\n","|{20569}|{20569,  21470}|{ 21470}|{ 20569}|{20569,  21470}|\n","|{20569}|{20569,  21470}|{ 21470}| {20569}|{20569,  21470}|\n","|{20569}|{20569,  21297}|{ 21297}|{ 20569}|{20569,  21297}|\n","|{20569}|{20569,  21297}|{ 21297}| {20569}|{20569,  21297}|\n","|{23918}|{23918,  23420}|{ 23420}| {23918}|{23918,  23420}|\n","|{24504}|{24504,  23647}|{ 23647}| {24504}|{24504,  23647}|\n","+-------+---------------+--------+--------+---------------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["motifs.distinct().count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7DgebOJfp583","executionInfo":{"status":"ok","timestamp":1689043314153,"user_tz":180,"elapsed":62118,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"e5eac81f-6f07-4830-a458-d4c488bd535a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["381021"]},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["### Recomendando novos relacionamentos"],"metadata":{"id":"_sgmxWHge79b"}},{"cell_type":"code","source":["# Encontrando motifs\n","motifs2 = g.find(\"(a)-[e]->(b); (b)-[e2]->(c); !(a)-[]->(c)\")\n","motifs2.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7RlqJCQPGAx5","executionInfo":{"status":"ok","timestamp":1689037538622,"user_tz":180,"elapsed":61585,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"44196d4b-98e3-4ec7-e516-459727ff1ccb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+---------+-------------------+----------+-------------------+----------+\n","|        a|                  e|         b|                 e2|         c|\n","+---------+-------------------+----------+-------------------+----------+\n","| {194827}|  {194827,  194627}| { 194627}|  {194627,  194309}| { 194309}|\n","|{1911017}|{1911017,  1910814}|{ 1910814}|{1910814,  1910794}|{ 1910794}|\n","|{2075966}|{2075966,  2075404}|{ 2075404}|{2075404,  2075880}|{ 2075880}|\n","|{1691936}|{1691936,  1691956}|{ 1691956}|{1691956,  1692192}|{ 1692192}|\n","| {276838}|  {276838,  276990}| { 276990}|  {276990,  277518}| { 277518}|\n","|{1113072}|{1113072,  1113343}|{ 1113343}|{1113343,  1112045}|{ 1112045}|\n","|{1070483}|{1070483,  1070600}|{ 1070600}|{1070600,  1070602}|{ 1070602}|\n","|{1786986}|{1786986,  1786315}|{ 1786315}|{1786315,  1785781}|{ 1785781}|\n","|  {78975}|    {78975,  79018}|  { 79018}|    {79018,  79096}|  { 79096}|\n","| {388023}|  {388023,  387634}| { 387634}|  {387634,  388650}| { 388650}|\n","|{2073198}|{2073198,  2073584}|{ 2073584}|{2073584,  2073676}|{ 2073676}|\n","|{1896022}|{1896022,  1895809}|{ 1895809}|{1895809,  1895082}|{ 1895082}|\n","|{1166203}|{1166203,  1166058}|{ 1166058}|{1166058,  1166062}|{ 1166062}|\n","|{1803372}|{1803372,  1803634}|{ 1803634}|{1803634,  1804154}|{ 1804154}|\n","|{1628703}|{1628703,  1628482}|{ 1628482}|{1628482,  1628714}|{ 1628714}|\n","|{2178929}|{2178929,  2179444}|{ 2179444}|{2179444,  2179750}|{ 2179750}|\n","| {519170}|  {519170,  519156}| { 519156}|  {519156,  520511}| { 520511}|\n","| {254197}|  {254197,  255171}| { 255171}|  {255171,  253617}| { 253617}|\n","| {473308}|  {473308,  472977}| { 472977}|  {472977,  473562}| { 473562}|\n","| {801217}|  {801217,  800982}| { 800982}|  {800982,  801100}| { 801100}|\n","+---------+-------------------+----------+-------------------+----------+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"code","source":["motifs2.distinct().count()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CULniViSp1oV","executionInfo":{"status":"ok","timestamp":1689040669770,"user_tz":180,"elapsed":64162,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"a4b48c90-e5b9-49e4-f73d-563a9b35b5fc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["175677"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["## BFS (Breadth-First Search)"],"metadata":{"id":"iHKGDUyqy_yZ"}},{"cell_type":"markdown","source":["<center>\n","<img src=\"http://www.cse.unsw.edu.au/~billw/Justsearch1.gif\" width=\"480px\"/>\n","</center>"],"metadata":{"id":"desrogVEXP5m"}},{"cell_type":"markdown","source":["BFS é um algoritmo que explora todos os vértices de um gráfico, começando pela raiz (escolhendo algum nó como sendo a raiz), depois visitando todos os vértices adjacentes e assim por diante."],"metadata":{"id":"IUoLHIsRy_fU"}},{"cell_type":"code","source":["# BFS\n","paths = g.bfs(\"id = 194827\", \"id = 194309\")\n","paths.show()"],"metadata":{"id":"0R9ytMemzAJg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689039070911,"user_tz":180,"elapsed":674921,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"5a57ca16-8892-451f-8ee6-246d1326db73"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+-----------------+---------+-----------------+---------+\n","|    from|               e0|       v1|               e1|       to|\n","+--------+-----------------+---------+-----------------+---------+\n","|{194827}|{194827,  194627}|{ 194627}|{194627,  194309}|{ 194309}|\n","+--------+-----------------+---------+-----------------+---------+\n","\n"]}]},{"cell_type":"markdown","source":["## SSSP (Single Source Shortest Path)"],"metadata":{"id":"caBVbh4uzUzw"}},{"cell_type":"markdown","source":["<center>\n","<img src=\"https://sites.radford.edu/~nokie/classes/360/Diagrams/ShortestPath1.png\" />\n","<img src=\"https://sites.radford.edu/~nokie/classes/360/Diagrams/ShortestPath2.png\" />\n","</center>"],"metadata":{"id":"SsY68wXYVdq-"}},{"cell_type":"markdown","source":["SSSP é um algoritmo que encontra o caminho mais curto de um nó para todos os outros nós no gráfico. Infelizmente, GraphFrames não tem uma implementação direta para SSSP. No entanto, podemos usar a função shortestPaths para calcular os caminhos mais curtos para um conjunto de pontos de referência."],"metadata":{"id":"BBrj5yhlzUmN"}},{"cell_type":"code","source":["ssp = g.shortestPaths(landmarks=[\" 274487\",\"274487\",\" 1780601\",\" 2332970\",' 381040'])"],"metadata":{"id":"XKpWBLAyzZsj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["ssp.select(ssp.id, f.explode(ssp.distances)).show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jPo2bdAUtG3d","executionInfo":{"status":"ok","timestamp":1689046422648,"user_tz":180,"elapsed":31179,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"}},"outputId":"507e7699-67f4-4d8e-94a5-289964c8cfad"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------+--------+-----+\n","|     id|     key|value|\n","+-------+--------+-----+\n","| 380403|  381040|    1|\n","|1780135| 1780601|    1|\n","|2330817| 2332970|    1|\n","|2332244| 2332970|    1|\n","|2332504| 2332970|    1|\n","| 382277|  381040|    1|\n","| 382610|  381040|    1|\n","| 381040|  381040|    2|\n","|1780301| 1780601|    1|\n","| 380879|  381040|    1|\n","| 381873|  381040|    1|\n","|2332607| 2332970|    1|\n","|1781432| 1780601|    1|\n","|2332515| 2332970|    1|\n","|1781681| 1780601|    1|\n","| 381245|  381040|    1|\n","|2330996| 2332970|    1|\n","| 272774|  274487|    1|\n","|1780100| 1780601|    1|\n","| 382056|  381040|    1|\n","+-------+--------+-----+\n","only showing top 20 rows\n","\n"]}]},{"cell_type":"markdown","source":["Note que as distâncias no shortestPaths são medidas pelo número de arestas entre os nós."],"metadata":{"id":"pdWH3qS4zf2n"}},{"cell_type":"markdown","source":["## Conclusão da sessão"],"metadata":{"id":"u20jBuvdTcBG"}},{"cell_type":"markdown","source":["1. Subgrafos\n","2. Encontrar padrões complexos em grafos\n","3. Breadth-First Search\n","4. Single Soure Shortest Path"],"metadata":{"id":"qmkkKK_sTdan"}},{"cell_type":"markdown","source":["## Exercício"],"metadata":{"id":"NCnmlbdJaB0S"}},{"cell_type":"markdown","source":["1. O que é um subgrafo e para que ele é usado? Forneça um exemplo de código que cria um subgrafo a partir de um GraphFrame existente, usando algum critério de seleção.\n","2. O que são motivos em grafos e como eles podem ser usados para encontrar padrões complexos? Escreva um exemplo de código que busca um motivo específico em um GraphFrame.\n","3. Explique o conceito de Breadth-First Search e como ele pode ser aplicado em um grafo. Escreva um código de exemplo que aplica BFS em um GraphFrame para encontrar o caminho mais curto entre dois vértices.\n","4. Explique o conceito de Single Source Shortest Path e como ele pode ser aplicado em um grafo. Escreva um código de exemplo que aplica SSSP em um GraphFrame.\n","5. Qual é a diferença entre SSSP e BFS? Em que cenários você usaria cada um deles? Dê exemplos."],"metadata":{"id":"uRc2Gm8iJpon"}}]}