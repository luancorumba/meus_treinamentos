{"cells":[{"cell_type":"markdown","metadata":{"id":"lJeDRY2Zc6Tn"},"source":["###### Inicialização"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ty_kN91oadtM"},"outputs":[],"source":["# instalar as dependências\n","!apt-get install openjdk-8-jdk-headless -qq > /dev/null\n","!wget -q https://dlcdn.apache.org/spark/spark-3.4.0/spark-3.4.0-bin-hadoop3.tgz\n","!tar xf spark-3.4.0-bin-hadoop3.tgz\n","!pip install -q findspark"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GMGdL4xyc423"},"outputs":[],"source":["# configurar as variáveis de ambiente\n","import os\n","os.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-8-openjdk-amd64\"\n","os.environ[\"SPARK_HOME\"] = \"/content/spark-3.4.0-bin-hadoop3\"\n","\n","# tornar o pyspark \"importável\"\n","import findspark\n","findspark.init('spark-3.4.0-bin-hadoop3')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1167,"status":"ok","timestamp":1683079605226,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"qRro-0ZO38tf","outputId":"7fdb7b24-d92f-4d02-829e-cef049336fb9"},"outputs":[{"name":"stdout","output_type":"stream","text":["listings.csv        100%[===================>]   4.37M  6.34MB/s    in 0.7s    \n"]}],"source":["# download do http para arquivo local\n","!wget --quiet --show-progress http://data.insideairbnb.com/brazil/rj/rio-de-janeiro/2023-03-28/visualisations/listings.csv"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kaKITJ4veGHc"},"outputs":[],"source":["from pyspark.sql import SparkSession\n","spark = SparkSession.builder.master('local[*]').getOrCreate()\n","sc = spark.sparkContext"]},{"cell_type":"markdown","metadata":{"id":"frFI5O7cZ5L8"},"source":["# PySpark (Sessão 5)"]},{"cell_type":"markdown","metadata":{"id":"pJCODccgTiQD"},"source":["![img](https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Apache_Spark_logo.svg/250px-Apache_Spark_logo.svg.png)\n","\n","\n","https://spark.apache.org/docs/latest/api/python/"]},{"cell_type":"markdown","metadata":{"id":"bGI5IDjEL5Z7"},"source":["## Recapitulando o que vimos antes..."]},{"cell_type":"markdown","metadata":{"id":"oD932sfTMe1-"},"source":["1. Introdução aos DataFrames\n","2. Operações de Transformação em DataFrames\n","3. Operações de Ação em DataFrames"]},{"cell_type":"markdown","metadata":{"id":"dTWJT5-cZL5L"},"source":["\n","## Transformações em DataFrames e Datasets"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15638,"status":"ok","timestamp":1683079638270,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"SatasuvbfU6w","outputId":"1a350068-66f1-4a02-eef4-e589655edd3e"},"outputs":[{"data":{"text/plain":["DataFrame[id: string, name: string, host_id: string, host_name: string, neighbourhood_group: string, neighbourhood: string, latitude: string, longitude: string, room_type: string, price: string, minimum_nights: string, number_of_reviews: string, last_review: string, reviews_per_month: string, calculated_host_listings_count: string, availability_365: string, number_of_reviews_ltm: double, license: int]"]},"execution_count":5,"metadata":{},"output_type":"execute_result"}],"source":["airbnb_rj = spark.read.csv(\"./listings.csv\", inferSchema=True, header=True)\n","airbnb_rj"]},{"cell_type":"markdown","metadata":{"id":"vHFBqktKZM3J"},"source":["\n","As transformações avançadas em DataFrames no PySpark são operações que ajudam a manipular e analisar os dados de maneiras mais complexas. Algumas das transformações avançadas incluem:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"executionInfo":{"elapsed":1184,"status":"ok","timestamp":1683079639372,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"B1bgdiM0fQCg","outputId":"b75d00bf-d840-4fc7-f8c1-87f0338f3793"},"outputs":[{"data":{"text/html":["\n","  <div id=\"df-df345109-11a2-4e8f-a500-34cfbacd2a1d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>name</th>\n","      <th>host_id</th>\n","      <th>host_name</th>\n","      <th>neighbourhood_group</th>\n","      <th>neighbourhood</th>\n","      <th>latitude</th>\n","      <th>longitude</th>\n","      <th>room_type</th>\n","      <th>price</th>\n","      <th>minimum_nights</th>\n","      <th>number_of_reviews</th>\n","      <th>last_review</th>\n","      <th>reviews_per_month</th>\n","      <th>calculated_host_listings_count</th>\n","      <th>availability_365</th>\n","      <th>number_of_reviews_ltm</th>\n","      <th>license</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>17878</td>\n","      <td>Very Nice 2Br in Copacabana w. balcony, fast WiFi</td>\n","      <td>68997</td>\n","      <td>Matthias</td>\n","      <td>None</td>\n","      <td>Copacabana</td>\n","      <td>-22.96599</td>\n","      <td>-43.1794</td>\n","      <td>Entire home/apt</td>\n","      <td>350</td>\n","      <td>5</td>\n","      <td>288</td>\n","      <td>2023-03-01</td>\n","      <td>1.86</td>\n","      <td>1</td>\n","      <td>264</td>\n","      <td>19.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>24480</td>\n","      <td>Nice and cozy near Ipanema Beach, w/ home office</td>\n","      <td>99249</td>\n","      <td>Goya</td>\n","      <td>None</td>\n","      <td>Ipanema</td>\n","      <td>-22.98405</td>\n","      <td>-43.20189</td>\n","      <td>Entire home/apt</td>\n","      <td>624</td>\n","      <td>3</td>\n","      <td>86</td>\n","      <td>2023-03-27</td>\n","      <td>0.56</td>\n","      <td>3</td>\n","      <td>357</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>200568</td>\n","      <td>30m of Ipa Beach e fins de semana special price !</td>\n","      <td>980805</td>\n","      <td>Henrique</td>\n","      <td>None</td>\n","      <td>Ipanema</td>\n","      <td>-22.98586</td>\n","      <td>-43.19411</td>\n","      <td>Entire home/apt</td>\n","      <td>100</td>\n","      <td>30</td>\n","      <td>198</td>\n","      <td>2023-02-13</td>\n","      <td>1.45</td>\n","      <td>6</td>\n","      <td>59</td>\n","      <td>9.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>342874</td>\n","      <td>Comfortable in Copacabana beach</td>\n","      <td>829630</td>\n","      <td>Luciana</td>\n","      <td>None</td>\n","      <td>Leme</td>\n","      <td>-22.96392</td>\n","      <td>-43.17263</td>\n","      <td>Entire home/apt</td>\n","      <td>236</td>\n","      <td>2</td>\n","      <td>159</td>\n","      <td>2023-02-26</td>\n","      <td>1.19</td>\n","      <td>3</td>\n","      <td>105</td>\n","      <td>31.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25026</td>\n","      <td>Beautiful Modern Decorated Studio in Copa</td>\n","      <td>102840</td>\n","      <td>Viviane</td>\n","      <td>None</td>\n","      <td>Copacabana</td>\n","      <td>-22.97735</td>\n","      <td>-43.19105</td>\n","      <td>Entire home/apt</td>\n","      <td>307</td>\n","      <td>3</td>\n","      <td>262</td>\n","      <td>2023-03-27</td>\n","      <td>1.68</td>\n","      <td>1</td>\n","      <td>257</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df345109-11a2-4e8f-a500-34cfbacd2a1d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-df345109-11a2-4e8f-a500-34cfbacd2a1d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-df345109-11a2-4e8f-a500-34cfbacd2a1d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["       id                                               name host_id  \\\n","0   17878  Very Nice 2Br in Copacabana w. balcony, fast WiFi   68997   \n","1   24480   Nice and cozy near Ipanema Beach, w/ home office   99249   \n","2  200568  30m of Ipa Beach e fins de semana special price !  980805   \n","3  342874                    Comfortable in Copacabana beach  829630   \n","4   25026          Beautiful Modern Decorated Studio in Copa  102840   \n","\n","  host_name neighbourhood_group neighbourhood   latitude  longitude  \\\n","0  Matthias                None    Copacabana  -22.96599   -43.1794   \n","1      Goya                None       Ipanema  -22.98405  -43.20189   \n","2  Henrique                None       Ipanema  -22.98586  -43.19411   \n","3   Luciana                None          Leme  -22.96392  -43.17263   \n","4   Viviane                None    Copacabana  -22.97735  -43.19105   \n","\n","         room_type price minimum_nights number_of_reviews last_review  \\\n","0  Entire home/apt   350              5               288  2023-03-01   \n","1  Entire home/apt   624              3                86  2023-03-27   \n","2  Entire home/apt   100             30               198  2023-02-13   \n","3  Entire home/apt   236              2               159  2023-02-26   \n","4  Entire home/apt   307              3               262  2023-03-27   \n","\n","  reviews_per_month calculated_host_listings_count availability_365  \\\n","0              1.86                              1              264   \n","1              0.56                              3              357   \n","2              1.45                              6               59   \n","3              1.19                              3              105   \n","4              1.68                              1              257   \n","\n","   number_of_reviews_ltm  license  \n","0                   19.0      NaN  \n","1                    1.0      NaN  \n","2                    9.0      NaN  \n","3                   31.0      NaN  \n","4                   14.0      NaN  "]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["airbnb_rj.limit(5).toPandas()"]},{"cell_type":"markdown","metadata":{"id":"gJ4Qds5Uii5Y"},"source":["Limpando os dados..."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-85c8aJkg4zV"},"outputs":[],"source":["airbnb_rj = airbnb_rj.where(airbnb_rj.host_id.cast(\"int\").isNotNull())\n","airbnb_rj = airbnb_rj.withColumn(\"host_id\", airbnb_rj.host_id.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"price\", airbnb_rj.price.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"minimum_nights\", airbnb_rj.minimum_nights.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"number_of_reviews\", airbnb_rj.number_of_reviews.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"reviews_per_month\", airbnb_rj.reviews_per_month.cast('double'))\n","airbnb_rj = airbnb_rj.withColumn(\"availability_365\", airbnb_rj.availability_365.cast('int'))\n","airbnb_rj = airbnb_rj.withColumn(\"number_of_reviews_ltm\", airbnb_rj.number_of_reviews_ltm.cast('double'))"]},{"cell_type":"markdown","metadata":{"id":"SjfGOKzT2Wdy"},"source":["[union(other)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrame.union.html)\n","\n","Concatena dois DataFrames com a mesma estrutura de colunas. É semelhante à operação UNION do SQL."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2190,"status":"ok","timestamp":1683079759282,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"rdVJMdGjgGyE","outputId":"8d38ed90-eea1-49d4-9b1e-e7221773d2de"},"outputs":[{"data":{"text/plain":["30230"]},"execution_count":8,"metadata":{},"output_type":"execute_result"}],"source":["airbnb_rj.count()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7eqsNm0O2bDT"},"outputs":[],"source":["df_duplicado = airbnb_rj.union(airbnb_rj)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":644,"status":"ok","timestamp":1683079778778,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"KgueNTvVgQQo","outputId":"50282fd1-0e5c-46b0-f2b7-a62b3c77b905"},"outputs":[{"data":{"text/plain":["60460"]},"execution_count":10,"metadata":{},"output_type":"execute_result"}],"source":["df_duplicado.count()"]},{"cell_type":"markdown","metadata":{"id":"P-dLsMZkZNyj"},"source":["[cube(*cols)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrame.cube.html)\n","\n","A função cube gera uma agregação multi-dimensional a partir das colunas especificadas, permitindo cálculos em todas as combinações possíveis de colunas. Normalmente, essa operação é seguida por uma função de agregação, como sum(), count(), mean(), min() ou max()."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":2274,"status":"ok","timestamp":1683079843852,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"wtOXdW_k6iot","outputId":"541359dc-18c1-4036-af66-36b89ce2f487"},"outputs":[{"name":"stdout","output_type":"stream","text":["+--------------------+---------------+----------+\n","|       neighbourhood|      room_type|sum(price)|\n","+--------------------+---------------+----------+\n","|           Riachuelo|Entire home/apt|      8587|\n","|             Andaraí|   Private room|      4121|\n","|Cidade Universitária|Entire home/apt|       396|\n","|         São Conrado|Entire home/apt|    495864|\n","|          Santa Cruz|    Shared room|     10992|\n","|             Inhaúma|           null|      4546|\n","|           Encantado|Entire home/apt|      2632|\n","|       Vasco da Gama|   Private room|       354|\n","|                Leme|           null|    327409|\n","|          Portuguesa|           null|      4716|\n","|              Galeão|           null|      1087|\n","|     Parque Anchieta|   Private room|       579|\n","|               Acari|Entire home/apt|       250|\n","|Freguesia (Jacare...|           null|    161504|\n","| Vicente de Carvalho|           null|       202|\n","|        Higienópolis|    Shared room|       820|\n","|             Estácio|Entire home/apt|    506093|\n","|               Zumbi|   Private room|        96|\n","|              Jacaré|           null|      1626|\n","|               Gávea|   Private room|     10463|\n","+--------------------+---------------+----------+\n","only showing top 20 rows\n","\n"]}],"source":["df_cube = airbnb_rj.cube(\"neighbourhood\", \"room_type\").sum(\"price\")\n","df_cube.show()"]},{"cell_type":"markdown","metadata":{"id":"YmHr2w7H6i82"},"source":["[pivot(pivot_col, values=None)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.GroupedData.pivot.html)\n","\n","Ela transforma uma coluna do DataFrame em várias colunas, criando uma tabela dinâmica. Pode ser útil para agregar dados e analisar tendências."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3249,"status":"ok","timestamp":1683079971879,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"IeERrSNE6qeb","outputId":"1b733716-0170-4aed-d115-708b730bf8af"},"outputs":[{"name":"stdout","output_type":"stream","text":["+-------------------+---------------+----------+------------+-----------+\n","|      neighbourhood|Entire home/apt|Hotel room|Private room|Shared room|\n","+-------------------+---------------+----------+------------+-----------+\n","|             Cocotá|            300|      null|         690|       null|\n","|              Gávea|         184989|      null|       10463|       null|\n","|       Tomás Coelho|           null|      null|         125|       null|\n","|            Ipanema|        2726894|      1673|      121675|       4819|\n","|           Realengo|           7694|      null|         200|       null|\n","|      Gardênia Azul|          12836|      null|        1654|        190|\n","|      Bento Ribeiro|           2281|      null|         173|         60|\n","|              Rocha|           3456|      null|         217|        416|\n","|Vicente de Carvalho|            163|      null|          39|       null|\n","|         Manguinhos|           null|      null|         233|       null|\n","|        Jacarepaguá|         952992|      1727|      155813|       8988|\n","|       Campo Grande|          46927|      null|        6936|        660|\n","|           Botafogo|        1065998|      1284|      202053|       6806|\n","|               Leme|         301332|      null|       23701|       2376|\n","|            Grumari|           2827|      null|         887|       null|\n","|            Rocinha|          15782|      null|         991|        426|\n","|       Padre Miguel|           2515|      null|         457|       null|\n","|           Flamengo|         302228|      null|       36266|       1596|\n","|       Santo Cristo|           6929|      null|        3007|       null|\n","|  Engenho da Rainha|           1721|      null|        null|       null|\n","+-------------------+---------------+----------+------------+-----------+\n","only showing top 20 rows\n","\n"]}],"source":["pivot_df = airbnb_rj.groupBy(\"neighbourhood\").pivot(\"room_type\").sum(\"price\")\n","pivot_df.show()"]},{"cell_type":"markdown","metadata":{"id":"HOAb-rtc6rCV"},"source":["[melt(ids, values, variableColumnName, variableColumnName)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrame.melt.html)\n","\n","Refaz a transformação de pivô de um DataFrame do formato amplo para formato longo, deixando opcionalmente as colunas de identificador definidas. Isso é o contrário de groupBy(…).pivot(…).agg(…), exceto para a agregação, que não pode ser revertida."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1182,"status":"ok","timestamp":1683080132357,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"XaBhYPjo6rip","outputId":"fa5c1130-effe-49d6-daad-3646cbb716ef"},"outputs":[{"name":"stdout","output_type":"stream","text":["+-------------+---------------+-------+\n","|neighbourhood|      room_type|  price|\n","+-------------+---------------+-------+\n","|       Cocotá|Entire home/apt|    300|\n","|       Cocotá|     Hotel room|   null|\n","|       Cocotá|   Private room|    690|\n","|        Gávea|Entire home/apt| 184989|\n","|        Gávea|     Hotel room|   null|\n","|        Gávea|   Private room|  10463|\n","| Tomás Coelho|Entire home/apt|   null|\n","| Tomás Coelho|     Hotel room|   null|\n","| Tomás Coelho|   Private room|    125|\n","|      Ipanema|Entire home/apt|2726894|\n","|      Ipanema|     Hotel room|   1673|\n","|      Ipanema|   Private room| 121675|\n","|     Realengo|Entire home/apt|   7694|\n","|     Realengo|     Hotel room|   null|\n","|     Realengo|   Private room|    200|\n","|Gardênia Azul|Entire home/apt|  12836|\n","|Gardênia Azul|     Hotel room|   null|\n","|Gardênia Azul|   Private room|   1654|\n","|Bento Ribeiro|Entire home/apt|   2281|\n","|Bento Ribeiro|     Hotel room|   null|\n","+-------------+---------------+-------+\n","only showing top 20 rows\n","\n"]}],"source":["(pivot_df\n","    .melt(\n","        ids=['neighbourhood'], values=['Entire home/apt', 'Hotel room', 'Private room'],\n","        variableColumnName=\"room_type\",\n","        valueColumnName=\"price\")\n","    .show())"]},{"cell_type":"markdown","metadata":{"id":"fdFGdR-g7LxX"},"source":["[sample(withReplacement, fraction, seed=None)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrame.sample.html)\n","\n","A função sample retorna um DataFrame amostrado aleatoriamente. O parâmetro withReplacement controla se a amostragem é com reposição ou sem reposição. O parâmetro fraction determina a fração de linhas a serem amostradas. O parâmetro opcional seed permite definir uma semente para reprodutibilidade."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xypTQCqf7X5e"},"outputs":[],"source":["amostragem = airbnb_rj.sample(withReplacement=False, fraction=0.2, seed=42)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":606,"status":"ok","timestamp":1683080251460,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"qk1xAJv7k-8a","outputId":"a370e23d-3125-42db-9fd5-570d1b0d5178"},"outputs":[{"data":{"text/plain":["6066"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["amostragem.count()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":697,"status":"ok","timestamp":1683080286034,"user":{"displayName":"Luan Corumba","userId":"07892592111474770617"},"user_tz":180},"id":"xWXolYvik_Th","outputId":"78a47edf-e77b-4083-96de-ca34a8746d8f"},"outputs":[{"name":"stdout","output_type":"stream","text":["+------+--------------------+-------+--------------+-------------------+---------------+----------+----------+---------------+-----+--------------+-----------------+-----------+-----------------+------------------------------+----------------+---------------------+-------+\n","|    id|                name|host_id|     host_name|neighbourhood_group|  neighbourhood|  latitude| longitude|      room_type|price|minimum_nights|number_of_reviews|last_review|reviews_per_month|calculated_host_listings_count|availability_365|number_of_reviews_ltm|license|\n","+------+--------------------+-------+--------------+-------------------+---------------+----------+----------+---------------+-----+--------------+-----------------+-----------+-----------------+------------------------------+----------------+---------------------+-------+\n","| 48305|Bright 6bed Penth...|  70933|       Goitaca|               null|        Ipanema| -22.98591| -43.20302|Entire home/apt| 2270|             2|              136| 2023-03-19|             0.92|                             9|             254|                 34.0|   null|\n","| 51703|Ocean view, block...| 238091|         Dália|               null|     Copacabana|-22.981731|-43.190571|Entire home/apt|  178|             3|              233| 2023-03-25|              1.8|                             2|             326|                 30.0|   null|\n","|347295|Copa Penthouse Br...|1603206|           Bob|               null|     Copacabana| -22.96654| -43.18248|Entire home/apt|  197|             3|               75| 2023-03-19|             0.56|                             5|             333|                  2.0|   null|\n","| 64795|Ipanema amazing 3...|  93005|        Andrea|               null|        Ipanema| -22.98169|  -43.2028|Entire home/apt|  497|             3|               51| 2023-02-22|             0.35|                             1|             180|                 14.0|   null|\n","|230989|Nice Flat in Copa...|1207700|   Maria Luiza|               null|     Copacabana| -22.97923| -43.18902|Entire home/apt|  174|             3|              138| 2023-03-26|              1.0|                             4|             335|                 18.0|   null|\n","| 70547|37B&B - Santa Ter...| 357995|   Isa & Paolo|               null|   Santa Teresa|  -22.9172| -43.17812|   Private room|  203|             4|               86| 2023-03-26|             0.59|                             2|              90|                  2.0|   null|\n","|239531|Bedroom and sea v...| 792218|          Levy|               null|     Copacabana| -22.96434| -43.17563|Entire home/apt|  194|             2|              104| 2023-03-11|             0.76|                            10|             332|                 10.0|   null|\n","| 85807|   Ipanema Copa Flat| 470565|     Sebastian|               null|        Ipanema| -22.98552| -43.19432|Entire home/apt|  219|             2|                4| 2020-10-12|              0.1|                             4|             301|                  0.0|   null|\n","|391835|Charming big apar...|1298591|        Karina|               null|        Ipanema| -22.98494|  -43.2062|Entire home/apt|  566|             3|               23| 2023-02-01|             0.18|                             2|              76|                 16.0|   null|\n","| 88781|COPACABANA - ÓTIM...| 474221|          June|               null|     Copacabana| -22.97456| -43.18807|Entire home/apt|  265|             2|               78| 2023-01-31|             0.63|                             6|               0|                 10.0|   null|\n","| 89862|COPACABANA - No m...| 474221|          June|               null|     Copacabana| -22.97607| -43.18926|Entire home/apt|25000|             2|               55| 2023-02-12|             0.44|                             6|               0|                  8.0|   null|\n","|396849|Ff702| 3 bedrooms...|1982737|       Estadia|               null|         Leblon|-22.980856|  -43.2206|Entire home/apt|  429|             1|              141| 2023-03-16|             1.06|                           114|             301|                 20.0|   null|\n","| 89893|Exotic place in R...| 483023|          Geny|               null|    Laranjeiras| -22.94124| -43.19214|   Private room|  468|             1|                0|       null|             null|                             1|             365|                  0.0|   null|\n","| 94895|Quarto iluminado ...| 506187|        Sheila|               null|     Copacabana| -22.97256| -43.18948|   Private room|  130|             2|               13| 2023-02-28|             0.15|                             3|             309|                  5.0|   null|\n","|402104|Lovely suite in B...|2007018|     Ana Lucia|               null|Barra da Tijuca| -23.01121| -43.34006|   Private room|  400|             1|               12| 2023-03-26|             0.09|                             4|             287|                  3.0|   null|\n","|404811|BAND NEW APT COPA...| 581488|        Carlos|               null|     Copacabana| -22.97716|  -43.1937|   Private room|  150|            90|                0|       null|             null|                             1|               0|                  0.0|   null|\n","|264816|Duplex in BARRA  ...| 259815|Valerie & Alex|               null|Barra da Tijuca| -23.00291| -43.39086|Entire home/apt|  270|            22|               42| 2023-02-09|             0.32|                             2|             165|                  4.0|   null|\n","|416290|Great single room...|1989397|     Dominique|               null|       Botafogo| -22.95411| -43.19469|   Private room|  250|             4|               12| 2023-01-03|              0.1|                             1|             364|                  2.0|   null|\n","|108882|Gloria Sunshine A...| 475926| Angelica/ Fca|               null|         Glória| -22.91972|  -43.1789|Entire home/apt|  224|             3|               58| 2021-09-13|              0.4|                             1|               0|                  0.0|   null|\n","|273261|Amazing Huge Apar...| 533566|         Lucas|               null|         Leblon| -22.98632| -43.22936|Entire home/apt| 5198|             2|                0|       null|             null|                             1|             365|                  0.0|   null|\n","+------+--------------------+-------+--------------+-------------------+---------------+----------+----------+---------------+-----+--------------+-----------------+-----------+-----------------+------------------------------+----------------+---------------------+-------+\n","only showing top 20 rows\n","\n"]}],"source":["amostragem.show()"]},{"cell_type":"markdown","metadata":{"id":"x2AomLJW7YfQ"},"source":["[selectExpr(*expr)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrame.selectExpr.html)\n","\n","A função selectExpr permite selecionar colunas usando expressões SQL, o que pode ser útil para realizar cálculos e transformações complexas em colunas."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"EyTfsK_Z7fwZ","outputId":"5a6f79e8-865f-4f98-aa77-f2fff4b8c0fe"},"outputs":[{"name":"stdout","output_type":"stream","text":["+--------------------+--------------------+---------------+-----+------------+\n","|                nome|           host_name|         bairro|price|preco_minimo|\n","+--------------------+--------------------+---------------+-----+------------+\n","|Very Nice 2Br in ...|            Matthias|     Copacabana|  350|        1750|\n","|Nice and cozy nea...|                Goya|        Ipanema|  624|        1872|\n","|30m of Ipa Beach ...|            Henrique|        Ipanema|  100|        3000|\n","|Comfortable in Co...|             Luciana|           Leme|  236|         472|\n","|Beautiful Modern ...|             Viviane|     Copacabana|  307|         921|\n","|Best Studio in Ri...|                Alex|     Copacabana|  266|         798|\n","|COPACABANA SEA BR...|Patricia Miranda ...|     Copacabana|  180|         540|\n","|Bright 6bed Penth...|             Goitaca|        Ipanema| 2270|        4540|\n","|IPANEMA PENTHOUSE...|            Alastair|        Ipanema| 1899|        9495|\n","|BEAUTIFUL! Spacio...|           Elizabeth|     Copacabana| 1576|        3152|\n","|BEAUTIFUL! Spacio...|           Elizabeth|     Copacabana|  427|         854|\n","|Ocean front 2 sui...|               Hilda|Barra da Tijuca|  539|        1617|\n","|Confortable 4BD 3...|              Marcio|     Copacabana|  627|        1881|\n","|Alugo quarto espa...|            Jassanan|  Vila da Penha|  340|         340|\n","|BEAUTIFUL! Spacio...|           Elizabeth|     Copacabana|  214|         428|\n","|Djalma Ocean View...|               David|     Copacabana|  200|         800|\n","|Ocean view, block...|               Dália|     Copacabana|  178|         534|\n","|Comfortable room ...|         Zeilma , Da|       Flamengo|  780|         780|\n","|Copa Penthouse Br...|                 Bob|     Copacabana|  197|         591|\n","|Walk to Joatinga ...|      Sherri & Andre|            Joá| 1355|        2710|\n","+--------------------+--------------------+---------------+-----+------------+\n","only showing top 20 rows\n","\n"]}],"source":["df_selectExpr = airbnb_rj.selectExpr(\"name as nome\", \"host_name \", \"neighbourhood as bairro\", \"price as price\", \"price * minimum_nights as preco_minimo\")\n","df_selectExpr.show()"]},{"cell_type":"markdown","metadata":{"id":"66gbNHaj9FmQ"},"source":["[approxQuantile(col, probabilities, relativeError)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.DataFrameStatFunctions.approxQuantile.html)\n","\n","A função approxQuantile calcula aproximadamente os quantis de uma coluna do DataFrame. O parâmetro probabilities é uma lista de quantis a serem calculados (por exemplo, [0.25, 0.5, 0.75] para o primeiro, segundo e terceiro quartis). O parâmetro relativeError controla o erro relativo máximo permitido na estimativa do quantil."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"X62ImoXd_650"},"outputs":[],"source":["quantis = airbnb_rj.approxQuantile(\"price\", [0.05,0.25, 0.5, 0.75, 0.95], 0.0)\n","quantis"]},{"cell_type":"markdown","metadata":{"id":"OGrUSUraZRmh"},"source":["## Operações de Janela"]},{"cell_type":"markdown","metadata":{"id":"IlGNl38WZSkC"},"source":["As transformações com janelamento no PySpark permitem aplicar funções de agregação e análise em um intervalo específico de linhas, chamado de janela, dentro de um DataFrame. Essas janelas são definidas com base em uma ou mais colunas de ordenação e podem ser restritas a um grupo de linhas com base em uma ou mais colunas de partição.\n","\n","As operações de janelamento são úteis para calcular agregações cumulativas, executar análises de séries temporais, calcular rankings e percentis, entre outras aplicações.\n","\n","Para realizar transformações com janelamento no PySpark, siga estas etapas:\n","\n","Importe as funções necessárias:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sL0K-w7671wm"},"outputs":[],"source":["from pyspark.sql.functions import sum, row_number, rank, dense_rank, percent_rank, ntile\n","from pyspark.sql.window import Window"]},{"cell_type":"markdown","metadata":{"id":"ZgiOV0aj8BXU"},"source":["Defina a especificação da janela usando a classe Window:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wjp22F6F7_bk"},"outputs":[],"source":["window_spec = Window.partitionBy(\"host_id\").orderBy(\"last_review\")"]},{"cell_type":"markdown","metadata":{"id":"hBd-DAH08Loe"},"source":["Aplique funções de janelamento usando a especificação da janela:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n7s4m1vZB_h2"},"outputs":[],"source":["# Calcular a soma cumulativa dos salários por departamento\n","df_cumsum = airbnb_rj.withColumn(\"reviews_acumuladas\", sum(\"number_of_reviews\").over(window_spec))\n","df_cumsum.select('host_id','last_review','reviews_acumuladas').show()"]},{"cell_type":"markdown","metadata":{"id":"lhapKkgVBl5H"},"source":["[row_number()](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.row_number.html#pyspark.sql.functions.row_number)\n","\n","A função row_number atribui a cada linha um número único dentro de uma janela particionada. A ordem dos números é determinada pela coluna de ordenação especificada na janela."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cighpLI7B8uF"},"outputs":[],"source":["# Calcular o número da linha por departamento\n","df_rownum = airbnb_rj.withColumn(\"Row_Number\", row_number().over(window_spec))\n","df_rownum.select('host_id','last_review','Row_Number').show()"]},{"cell_type":"markdown","metadata":{"id":"QfDZnF1PCCYr"},"source":["[rank()](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.rank.html#pyspark.sql.functions.rank)\n","\n","A função rank atribui a cada linha um rank (posição) dentro de uma janela particionada. As linhas com valores iguais recebem o mesmo rank e há lacunas no rank para valores consecutivos."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7ywSC0myCBvO"},"outputs":[],"source":["# Calcular o rank por departamento\n","df_rank = airbnb_rj.withColumn(\"Rank\", rank().over(window_spec))\n","df_rank.select('host_id','last_review','Rank').show()"]},{"cell_type":"markdown","metadata":{"id":"fz46lLgYCMym"},"source":["[dense_rank()](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.dense_rank.html#pyspark.sql.functions.dense_rank)\n","\n","A função dense_rank atribui a cada linha um rank denso (posição) dentro de uma janela particionada. As linhas com valores iguais recebem o mesmo rank e não há lacunas no rank para valores consecutivos."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8-Ybx-srCNbg"},"outputs":[],"source":["# Calcular o rank denso por departamento\n","df_dense_rank = airbnb_rj.withColumn(\"Dense_Rank\", dense_rank().over(window_spec))\n","df_dense_rank.select('host_id','last_review','Dense_Rank').show()"]},{"cell_type":"markdown","metadata":{"id":"-ySpkkk9CODV"},"source":["[percent_rank()](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.percent_rank.html#pyspark.sql.functions.percent_rank)\n","\n","A função ```percent_rank``` atribui a cada linha um percentil rank (fração) dentro de uma janela particionada. O percentil rank é calculado como (rank - 1) / (total de linhas na partição - 1)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dBliXv1ICOf_"},"outputs":[],"source":["# Calcular o percentil rank por departamento\n","df_percent_rank = airbnb_rj.withColumn(\"Percent_Rank\", percent_rank().over(window_spec))\n","df_percent_rank.select('host_id','last_review','Percent_Rank').show()"]},{"cell_type":"markdown","metadata":{"id":"-dcO8xgPCZnf"},"source":["[ntile(n)](https://spark.apache.org/docs/latest/api/python/reference/pyspark.sql/api/pyspark.sql.functions.ntile.html#pyspark.sql.functions.ntile)\n","\n","A função ntile divide as linhas de uma janela particionada em n grupos (tiles) de tamanhos aproximadamente iguais. A função atribui um número de grupo a cada linha, variando de 1 a n."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"QiMC2-P28MkI"},"outputs":[],"source":["# Calcular o ntile por departamento (dividir em 2 grupos neste exemplo)\n","df_ntile = airbnb_rj.withColumn(\"Ntile\", ntile(3).over(window_spec))\n","df_ntile.select('host_id','last_review','Ntile').show()"]},{"cell_type":"markdown","metadata":{"id":"thuZ9aCBZUgh"},"source":["## Conclusão da sessão"]},{"cell_type":"markdown","metadata":{"id":"hXu1vyaGZVYS"},"source":["1. Transformações avançadas em DataFrames\n","2. Operações de janela"]},{"cell_type":"markdown","metadata":{"id":"NCnmlbdJaB0S"},"source":["## Exercício"]},{"cell_type":"markdown","metadata":{"id":"uRc2Gm8iJpon"},"source":["1. Considere o seguinte DataFrame:\n","```\n","data = [(\"A\", \"Fruit\", 2), (\"B\", \"Fruit\", 4),\n","        (\"C\", \"Vegetable\", 3), (\"D\", \"Fruit\", 1),\n","        (\"E\", \"Vegetable\", 2), (\"F\", \"Fruit\", 3)]\n","columns = [\"Name\", \"Category\", \"Quantity\"]\n","df = spark.createDataFrame(data, columns)\n","```\n","Utilizando a função groupBy e agg, calcule a quantidade total de produtos por categoria.\n","\n","2. Considere o mesmo DataFrame da questão anterior. Utilize a função pivot para transformar a coluna \"Category\" em colunas separadas, com a quantidade total de produtos por categoria.\n","\n","3. Dado o DataFrame a seguir:\n","```\n","data = [(\"A\", 1000), (\"B\", 500),\n","        (\"C\", 800), (\"D\", 400),\n","        (\"E\", 1200), (\"F\", 700)]\n","columns = [\"Name\", \"Salary\"]\n","df = spark.createDataFrame(data, columns)\n","```\n","Utilize a função cube para calcular a soma dos salários por \"Name\" e o total geral.\n","\n","4. Considere o DataFrame a seguir:\n","```\n","data = [(\"A\", 2020, 100), (\"A\", 2021, 200),\n","        (\"B\", 2020, 300), (\"B\", 2021, 400),\n","        (\"C\", 2020, 200), (\"C\", 2021, 100)]\n","columns = [\"Name\", \"Year\", \"Sales\"]\n","df = spark.createDataFrame(data, columns)\n","```\n","Utilize a função rollup para calcular a soma das vendas por \"Name\" e \"Year\", bem como a soma das vendas por \"Name\" e o total geral.\n","\n","5. Crie um DataFrame com os seguintes dados:\n","```\n","data = [(\"A\", 1, 100), (\"A\", 2, 200),\n","        (\"B\", 1, 300), (\"B\", 2, 400),\n","        (\"C\", 1, 200), (\"C\", 2, 100)]\n","columns = [\"Name\", \"Month\", \"Sales\"]\n","df = spark.createDataFrame(data, columns)\n","```\n","Aplique a função window com as funções rank, dense_rank, row_number e percent_rank para calcular o rank, o rank denso, o número da linha e o percentil rank das vendas por \"Name\" em cada mês, ordenados por vendas em ordem decrescente."]}],"metadata":{"colab":{"collapsed_sections":["lJeDRY2Zc6Tn"],"toc_visible":true,"provenance":[],"authorship_tag":"ABX9TyPeW2SC9jzKJfFcsWJpf4L7"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}